#include <memory>
#include <string>
#include <vector>
#include <iostream>
#include <math.h>

#include <TH1.h>
#include <TH2.h>
#include <TTree.h>
#include <TFile.h>
#include <TROOT.h>
#include <TSystem.h>
#include <TString.h>
#include <TObjString.h>
#include <TCanvas.h>
#include <TVector3.h>
#include <TMatrixD.h>
#include <TRandom.h>
#include <TMath.h>

const Int_t nBins = 200; // table of bin edges

//const Double_t binTable[nBins+1] = {0, 12.0923, 12.9511, 13.78, 14.612, 15.4534, 16.3322, 17.2009, 18.0867, 19.0249,19.9645, 20.9242, 21.9086, 22.9248, 23.9894, 25.1201, 26.2783, 27.4691, 28.6973, 29.9524, 31.2796, 32.6688, 34.1073, 35.5829, 37.1416, 38.7405, 40.4475, 42.2128, 44.0999, 46.104, 48.1587, 50.2701, 52.4407, 54.7864, 57.1857, 59.7292, 62.416, 65.256, 68.1128, 71.1673, 74.2676, 77.5537, 80.9378, 84.4461, 88.0186, 91.7726, 95.7439, 99.7508, 103.977, 108.385,113.01, 117.772, 122.662, 127.767, 133.001, 138.452, 144.199, 150.001, 156.233, 162.519, 168.973, 175.589, 182.625, 189.917, 197.262, 204.964, 212.904, 221.076, 229.627, 238.513, 247.438, 256.741, 266.008, 275.749, 285.951, 296.49, 307.156, 318.197, 329.471, 340.946, 352.995, 365.154, 377.63, 390.645, 403.796, 417.3, 431.166, 445.786, 460.379, 475.394, 490.836, 506.385, 522.587, 539.274, 556.561, 573.887, 591.713, 609.922, 628.302, 647.414, 666.922, 686.271, 706.505, 727.099, 748.436, 769.791, 791.39, 814.272, 836.924, 860.546, 884.249, 908.426, 932.993, 958.157, 984.205, 1010.73, 1037.36, 1064.78, 1092.31, 1120.19, 1148.79, 1177.14, 1207.38, 1237.37, 1267.84, 1299.7, 1331.57, 1364.06, 1397.12, 1431.16, 1464.49, 1498.79, 1534.36, 1571.29, 1607.4, 1643.85, 1681.44, 1719.81, 1759.37, 1799.31, 1839.9, 1882.56, 1925.24, 1967.81, 2011.86, 2055.06, 2099.45, 2145.73, 2191.73, 2239.71, 2286.42, 2335.47, 2386.02, 2436.77, 2487.91, 2540.2, 2592, 2645.75, 2700.28, 2755.9, 2812.66, 2870.6, 2929.42, 2988.99, 3048.85, 3110.39, 3172.71, 3235.12, 3300.11, 3367.31, 3433.1, 3501.38, 3571.03, 3644.55, 3716.54, 3790.77, 3867.41, 3945.16, 4024.39, 4103.58, 4184.03, 4266.59, 4352.8, 4438.54, 4526.96, 4616.15, 4708.98, 4803.25, 4902.16, 4999.26, 5099.69, 5203.09, 5309.67, 5419.98, 5528.29, 5643.13, 5762.85, 5892.3, 6043.3, 6239.48, 7387.56};


const Double_t binTable[nBins+1] = {0, 15.0923, 20.9511, 23.78, 34.612, 35.4534, 16.3322, 17.2009, 18.0867, 19.0249,19.9645, 20.9242, 21.9086, 22.9248, 23.9894, 25.1201, 26.2783, 27.4691, 28.6973, 29.9524, 31.2796, 32.6688, 34.1073, 35.5829, 37.1416, 38.7405, 40.4475, 42.2128, 44.0999, 46.104, 48.1587, 50.2701, 52.4407, 54.7864, 57.1857, 59.7292, 62.416, 65.256, 68.1128, 71.1673, 74.2676, 77.5537, 80.9378, 84.4461, 88.0186, 91.7726, 95.7439, 99.7508, 103.977, 108.385,113.01, 117.772, 122.662, 127.767, 133.001, 138.452, 144.199, 150.001, 156.233, 162.519, 168.973, 175.589, 182.625, 189.917, 197.262, 204.964, 212.904, 221.076, 229.627, 238.513, 247.438, 256.741, 266.008, 275.749, 285.951, 296.49, 307.156, 318.197, 329.471, 340.946, 352.995, 365.154, 377.63, 390.645, 403.796, 417.3, 431.166, 445.786, 460.379, 475.394, 490.836, 506.385, 522.587, 539.274, 556.561, 573.887, 591.713, 609.922, 628.302, 647.414, 666.922, 686.271, 706.505, 727.099, 748.436, 769.791, 791.39, 814.272, 836.924, 860.546, 884.249, 908.426, 932.993, 958.157, 984.205, 1010.73, 1037.36, 1064.78, 1092.31, 1120.19, 1148.79, 1177.14, 1207.38, 1237.37, 1267.84, 1299.7, 1331.57, 1364.06, 1397.12, 1431.16, 1464.49, 1498.79, 1534.36, 1571.29, 1607.4, 1643.85, 1681.44, 1719.81, 1759.37, 1799.31, 1839.9, 1882.56, 1925.24, 1967.81, 2011.86, 2055.06, 2099.45, 2145.73, 2191.73, 2239.71, 2286.42, 2335.47, 2386.02, 2436.77, 2487.91, 2540.2, 2592, 2645.75, 2700.28, 2755.9, 2812.66, 2870.6, 2929.42, 2988.99, 3048.85, 3110.39, 3172.71, 3235.12, 3300.11, 3367.31, 3433.1, 3501.38, 3571.03, 3644.55, 3716.54, 3790.77, 3867.41, 3945.16, 4024.39, 4103.58, 4184.03, 4266.59, 4352.8, 4438.54, 4526.96, 4616.15, 4708.98, 4803.25, 4902.16, 4999.26, 5099.69, 5203.09, 5309.67, 5419.98, 5528.29, 5643.13, 5762.85, 5892.3, 6043.3, 6239.48, 7387.56};



Int_t getHiBinFromhiHF(const Double_t HF)
{
  Int_t binPos = -1;
  for(int i = 0; i < nBins; ++i){
    if(HF >= binTable[i] && HF < binTable[i+1]){
      binPos = i;
      break;
    }
  }

  binPos = nBins - 1 - binPos;

  return (Int_t)(200*((Double_t)binPos)/((Double_t)nBins));
}
